image: eclipse-temurin:17

stages:
  - build
  - sonarqube
  - release
#  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  GRADLE_USER_HOME: "cache/"

before_script:
  - chmod a+x ./gradlew
  - chmod 770 gradlew

.build_java:
  cache:
    key: "gradleCache"
    policy: pull-push
    paths:
      - .gradle
      - cache/

build:
  stage: build
  script:
    - ./gradlew clean -PinfoGitCommit="${CI_COMMIT_SHA}" -PinfoGitBranch="${CI_COMMIT_BRANCH}" -PinfoBuildSource="GitLab CI (${CI_PIPELINE_ID})";
    - ./gradlew build -PinfoGitCommit="${CI_COMMIT_SHA}" -PinfoGitBranch="${CI_COMMIT_BRANCH}" -PinfoBuildSource="GitLab CI (${CI_PIPELINE_ID})";
  cache:
    key: "$CI_COMMIT_REF_NAME-forge"
    policy: push
    paths:
      - fabric/build/libs
      - forge/build/libs
  artifacts:
    name: "SpawnGuard_1.20.1-${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_TIMESTAMP}"
    paths:
      - fabric/build/libs/*.jar
      - forge/build/libs/*.jar
    exclude:
      - fabric/build/libs/*-all.jar
      - fabric/build/libs/*-dev.jar
      - fabric/build/libs/*-javadoc.jar
      - fabric/build/libs/*-sources.jar
      - forge/build/libs/*-all.jar
      - forge/build/libs/*-dev.jar
      - forge/build/libs/*-javadoc.jar
      - forge/build/libs/*-sources.jar
    expire_in: 14 days
    when: always
  extends: .build_java

build-sonar:
  stage: sonarqube
  image: gradle:8.8.0-jdk17-jammy
  needs:
    - job: build
      artifacts: true
  cache:
    policy: pull-push
    key: "sonar-cache-$CI_COMMIT_REF_SLUG"
    paths:
      - "${SONAR_USER_HOME}/cache"
      - sonar-scanner/
  script: gradle sonar
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'main'
    - if: $CI_COMMIT_BRANCH == 'develop'

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - job: build
      artifacts: true
  script:
    - echo "Creating release for $CI_COMMIT_TAG"
  release:
    name: 'Release $CI_COMMIT_TAG'
    tag_name: '$CI_COMMIT_TAG'
    description: 'Release $CI_COMMIT_TAG'
    assets:
      links:
        - name: 'spawnguard-fabric-$CI_COMMIT_TAG.jar'
          url: 'https://gitlab.zendovo.eu/netleak/SpawnGuard/-/jobs/artifacts/$CI_COMMIT_SHA/raw/fabric/build/libs/spawnguard-fabric-$CI_COMMIT_TAG.jar?job=build'
        - name: 'spawnguard-forge-$CI_COMMIT_TAG.jar'
          url: 'https://gitlab.zendovo.eu/netleak/SpawnGuard/-/jobs/artifacts/$CI_COMMIT_SHA/raw/forge/build/libs/spawnguard-forge-$CI_COMMIT_TAG.jar?job=build'

#deploy:
#  stage: deploy
#  script:
#    - mkdir libs
##    - git remote set-url origin https://gitlab.zendovo.eu/netleak/SpawnGuard
##    - ./gradlew clean build makeChangelog publish curseforge1183148 -S -i --refresh-dependencies
#    # Export all variables, uncomment if you want a list of all variables at the end of the job
#    # - export
#  cache:
#    key: "$CI_COMMIT_REF_NAME"
#    policy: pull
#    paths:
#      - build/libs
#  artifacts:
#    paths:
#      - build/libs/*.jar
#      - output/*.jar
#      - output/*.html
#    expire_in: 1 week
#    when: on_success
#  only:
#    - tags
#  except:
#    - branches