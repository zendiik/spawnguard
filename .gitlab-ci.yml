image: eclipse-temurin:17

stages:
  - sonarqube
  - build
  - release
  - deploy

build-sonar:
  stage: sonarqube
  image: gradle:8.8.0-jdk17-jammy
  cache:
    policy: pull-push
    key: "sonar-cache-$CI_COMMIT_REF_SLUG"
    paths:
      - "${SONAR_USER_HOME}/cache"
      - sonar-scanner/
  script: gradle sonar
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'main'
    - if: $CI_COMMIT_BRANCH == 'develop'

build:
  stage: build
  before_script:
    - chmod a+x ./gradlew
    - chmod 770 gradlew
  script:
    - ./gradlew build -PmcVer="${MC_VER}" -PinfoGitCommit="${CI_COMMIT_SHA}" -PinfoGitBranch="${CI_COMMIT_BRANCH}" -PinfoBuildSource="GitLab CI (${CI_PIPELINE_ID})" --gradle-user-home cache/;
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build/libs
  artifacts:
    paths:
      - build/libs/*.jar
    expire_in: 1 week
    when: on_success
  only:
    - tags
  except:
    - branches

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - job: build
      artifacts: true
  script:
    - echo "Creating release for $CI_COMMIT_TAG"
  release:
    name: 'Release $CI_COMMIT_TAG'
    tag_name: '$CI_COMMIT_TAG'
    description: 'Release $CI_COMMIT_TAG'
    assets:
      links:
        - name: 'spawnguard-$CI_COMMIT_TAG.jar'
          url: 'https://gitlab.zendovo.eu/netleak/SpawnGuard/-/jobs/artifacts/$CI_COMMIT_SHA/raw/build/libs/spawnguard-$CI_COMMIT_TAG.jar?job=build'

deploy:
  stage: deploy
  script:
    - mkdir libs
#    - git remote set-url origin https://gitlab.zendovo.eu/netleak/SpawnGuard
#    - ./gradlew clean build makeChangelog publish curseforge1183148 -S -i --refresh-dependencies
    # Export all variables, uncomment if you want a list of all variables at the end of the job
    # - export
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build/libs
  artifacts:
    paths:
      - build/libs/*.jar
      - output/*.jar
      - output/*.html
    expire_in: 1 week
    when: on_success
  only:
    - tags
  except:
    - branches